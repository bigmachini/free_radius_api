sql {
    # Database driver and dialect
    driver = "rlm_sql_postgresql"
    dialect = "postgresql"

    # Database connection details
    server = "server"  # Hostname of the PostgreSQL server
    port = port                        # Default PostgreSQL port
    port = port                   # Username for the database
    password = password          # Password for the database user
    radius_db = db               # Database name

    # Connection pool settings
    # Adjust max_connections based on your server capacity
    max_connections = 32

    # FreeRADIUS SQL queries
    authorize_check_query = "SELECT id, username, attribute, op, value FROM radcheck WHERE username = '%{SQL-User-Name}' ORDER BY id"
    authorize_reply_query = "SELECT id, username, attribute, op, value FROM radreply WHERE username = '%{SQL-User-Name}' ORDER BY id"
    authorize_group_check_query = "SELECT id, groupname, attribute, op, value FROM radgroupcheck WHERE groupname = '%{SQL-Group-Name}' ORDER BY id"
    authorize_group_reply_query = "SELECT id, groupname, attribute, op, value FROM radgroupreply WHERE groupname = '%{SQL-Group-Name}' ORDER BY id"
    accounting_onoff_query = "UPDATE radacct SET acctstoptime = '%S', acctsessiontime = '%{Acct-Session-Time}', acctinputoctets = '%{Acct-Input-Octets}', acctoutputoctets = '%{Acct-Output-Octets}' WHERE acctstoptime IS NULL AND nasipaddress = '%{NAS-IP-Address}' AND acctsessionid = '%{Acct-Session-Id}'"
    accounting_start_query = "INSERT INTO radacct (acctsessionid, acctuniqueid, username, groupname, realm, nasipaddress, nasportid, nasporttype, acctstarttime, acctinputoctets, acctoutputoctets, calledstationid, callingstationid, servicetype, framedprotocol, framedipaddress) VALUES ('%{Acct-Session-Id}', '%{Acct-Unique-Id}', '%{User-Name}', '%{Group-Name}', '%{Realm}', '%{NAS-IP-Address}', '%{NAS-Port}', '%{NAS-Port-Type}', '%S', '%{Acct-Input-Octets}', '%{Acct-Output-Octets}', '%{Called-Station-Id}', '%{Calling-Station-Id}', '%{Service-Type}', '%{Framed-Protocol}', '%{Framed-IP-Address}')"
    accounting_stop_query = "UPDATE radacct SET acctstoptime = '%S', acctsessiontime = '%{Acct-Session-Time}', acctinputoctets = '%{Acct-Input-Octets}', acctoutputoctets = '%{Acct-Output-Octets}', acctterminatecause = '%{Acct-Terminate-Cause}', connectinfo_stop = '%{Connect-Info}' WHERE acctstoptime IS NULL AND nasipaddress = '%{NAS-IP-Address}' AND acctsessionid = '%{Acct-Session-Id}'"
    postauth_query = "INSERT INTO radpostauth (username, pass, reply, authdate) VALUES ('%{User-Name}', '%{%{User-Password}:-%{Chap-Password}}', '%{reply:Packet-Type}', '%S')"

    # Logging
    log_sql_queries = yes
    log_sql_results = yes

    # Handling simultaneous-use restrictions
    simul_count_query = "SELECT COUNT(*) FROM radacct WHERE username = '%{SQL-User-Name}' AND acctstoptime IS NULL"
    simul_verify_query = "SELECT radacctid, acctsessionid, nasipaddress, acctstarttime, acctstoptime FROM radacct WHERE username = '%{SQL-User-Name}' AND acctstoptime IS NULL"

    # Reading and writing of sessions
    nas_query = "SELECT id, nasname, shortname, type, secret, server FROM nas"
}